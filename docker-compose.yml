version: '3.1'
services:
  db:
    image: postgres:9.5
    container_name: db
    env_file: ./docker/.env
#    ports:
#      - 5432:5432

  backend:
    build:
      context: .
      dockerfile: ./docker/Dockerfile
    image: backend
    container_name: backend
    command: bash -c "sleep 4 && sh ./docker/entrypoint.sh"
    env_file:
      - ./docker/.env
    volumes:
      - .:/code
    ports:
      - 80:80
    ######### stdin_open and tty to debug
    stdin_open: true
    tty: true
    links:
      - db

#  redis:
#    image: "redis:alpine"

  # RabbitMQ for celery
  rabbitmq:
    image: rabbitmq
    container_name: rabbitmq
    env_file: ./docker/.env
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
#    volumes:
#      - web-rabbit:/var/lib/rabbitmq

  celery:
    image: backend
    container_name: celery
    command: bash -c "sleep 5 && celery -A web worker -l info"
    volumes:
      - .:/code
    env_file:
      - ./docker/.env
    depends_on:
      - db
#      - redis
      - rabbitmq


  celery-beat:
    image: backend
    container_name: celery-beat
    command: bash -c "sleep 5 && celery -A web beat -l info"
    volumes:
      - .:/code
    env_file:
      - ./docker/.env
    depends_on:
      - db
#      - redis
      - rabbitmq